// Move bytecode v6
module 3.validator_cap {
use 0000000000000000000000000000000000000000000000000000000000000002::object;
use 0000000000000000000000000000000000000000000000000000000000000002::transfer;
use 0000000000000000000000000000000000000000000000000000000000000002::tx_context;


struct UnverifiedValidatorOperationCap has store, key {
	id: UID,
	authorizer_validator_address: address
}
struct ValidatorOperationCap has drop {
	authorizer_validator_address: address
}

public(friend) unverified_operation_cap_address(cap#0#0: &UnverifiedValidatorOperationCap): &address {
B0:
	0: MoveLoc[0](cap#0#0: &UnverifiedValidatorOperationCap)
	1: ImmBorrowField[0](UnverifiedValidatorOperationCap.authorizer_validator_address: address)
	2: Ret
}
public(friend) verified_operation_cap_address(cap#0#0: &ValidatorOperationCap): &address {
B0:
	0: MoveLoc[0](cap#0#0: &ValidatorOperationCap)
	1: ImmBorrowField[1](ValidatorOperationCap.authorizer_validator_address: address)
	2: Ret
}
public(friend) new_unverified_validator_operation_cap_and_transfer(validator_address#0#0: address, ctx#0#0: &mut TxContext): ID {
L0:	operation_cap_id#1#0: ID
L1:	sender_address#1#0: address
B0:
	0: CopyLoc[1](ctx#0#0: &mut TxContext)
	1: FreezeRef
	2: Call tx_context::sender(&TxContext): address
	3: StLoc[5](sender_address#1#0: address)
	4: CopyLoc[5](sender_address#1#0: address)
	5: LdConst[0](Address: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
	6: Eq
	7: BrFalse(11)
B1:
	8: LdTrue
	9: StLoc[2](%#1: bool)
	10: Branch(15)
B2:
	11: MoveLoc[5](sender_address#1#0: address)
	12: CopyLoc[0](validator_address#0#0: address)
	13: Eq
	14: StLoc[2](%#1: bool)
B3:
	15: MoveLoc[2](%#1: bool)
	16: BrFalse(18)
B4:
	17: Branch(22)
B5:
	18: MoveLoc[1](ctx#0#0: &mut TxContext)
	19: Pop
	20: LdU64(0)
	21: Abort
B6:
	22: MoveLoc[1](ctx#0#0: &mut TxContext)
	23: Call object::new(&mut TxContext): UID
	24: CopyLoc[0](validator_address#0#0: address)
	25: Pack[0](UnverifiedValidatorOperationCap)
	26: StLoc[3](operation_cap#1#0: UnverifiedValidatorOperationCap)
	27: ImmBorrowLoc[3](operation_cap#1#0: UnverifiedValidatorOperationCap)
	28: Call object::id<UnverifiedValidatorOperationCap>(&UnverifiedValidatorOperationCap): ID
	29: StLoc[4](operation_cap_id#1#0: ID)
	30: MoveLoc[3](operation_cap#1#0: UnverifiedValidatorOperationCap)
	31: MoveLoc[0](validator_address#0#0: address)
	32: Call transfer::public_transfer<UnverifiedValidatorOperationCap>(UnverifiedValidatorOperationCap, address)
	33: MoveLoc[4](operation_cap_id#1#0: ID)
	34: Ret
}
public(friend) new_from_unverified(cap#0#0: &UnverifiedValidatorOperationCap): ValidatorOperationCap {
B0:
	0: MoveLoc[0](cap#0#0: &UnverifiedValidatorOperationCap)
	1: ImmBorrowField[0](UnverifiedValidatorOperationCap.authorizer_validator_address: address)
	2: ReadRef
	3: Pack[1](ValidatorOperationCap)
	4: Ret
}
}
