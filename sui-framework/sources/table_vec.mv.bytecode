// Move bytecode v6
module 2.table_vec {
use 0000000000000000000000000000000000000000000000000000000000000002::table;
use 0000000000000000000000000000000000000000000000000000000000000002::tx_context;


struct TableVec<phantom Element: store> has store {
	contents: Table<u64, Element>
}

public empty<Element: store>(ctx#0#0: &mut TxContext): TableVec<Element> {
B0:
	0: MoveLoc[0](ctx#0#0: &mut TxContext)
	1: Call table::new<u64, Element>(&mut TxContext): Table<u64, Element>
	2: PackGeneric[0](TableVec<Element>)
	3: Ret
}
public singleton<Element: store>(e#0#0: Element, ctx#0#0: &mut TxContext): TableVec<Element> {
B0:
	0: MoveLoc[1](ctx#0#0: &mut TxContext)
	1: Call empty<Element>(&mut TxContext): TableVec<Element>
	2: StLoc[2](t#1#0: TableVec<Element>)
	3: MutBorrowLoc[2](t#1#0: TableVec<Element>)
	4: MoveLoc[0](e#0#0: Element)
	5: Call push_back<Element>(&mut TableVec<Element>, Element)
	6: MoveLoc[2](t#1#0: TableVec<Element>)
	7: Ret
}
public length<Element: store>(t#0#0: &TableVec<Element>): u64 {
B0:
	0: MoveLoc[0](t#0#0: &TableVec<Element>)
	1: ImmBorrowFieldGeneric[0](TableVec.contents: Table<u64, Element>)
	2: Call table::length<u64, Element>(&Table<u64, Element>): u64
	3: Ret
}
public is_empty<Element: store>(t#0#0: &TableVec<Element>): bool {
B0:
	0: MoveLoc[0](t#0#0: &TableVec<Element>)
	1: Call length<Element>(&TableVec<Element>): u64
	2: LdU64(0)
	3: Eq
	4: Ret
}
public borrow<Element: store>(t#0#0: &TableVec<Element>, i#0#0: u64): &Element {
B0:
	0: CopyLoc[0](t#0#0: &TableVec<Element>)
	1: Call length<Element>(&TableVec<Element>): u64
	2: CopyLoc[1](i#0#0: u64)
	3: Gt
	4: BrFalse(6)
B1:
	5: Branch(10)
B2:
	6: MoveLoc[0](t#0#0: &TableVec<Element>)
	7: Pop
	8: LdConst[0](U64: [0, 0, 0, 0, 0, 0, 0, 0])
	9: Abort
B3:
	10: MoveLoc[0](t#0#0: &TableVec<Element>)
	11: ImmBorrowFieldGeneric[0](TableVec.contents: Table<u64, Element>)
	12: MoveLoc[1](i#0#0: u64)
	13: Call table::borrow<u64, Element>(&Table<u64, Element>, u64): &Element
	14: Ret
}
public push_back<Element: store>(t#0#0: &mut TableVec<Element>, e#0#0: Element) {
B0:
	0: CopyLoc[0](t#0#0: &mut TableVec<Element>)
	1: FreezeRef
	2: Call length<Element>(&TableVec<Element>): u64
	3: StLoc[2](key#1#0: u64)
	4: MoveLoc[0](t#0#0: &mut TableVec<Element>)
	5: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Element>)
	6: MoveLoc[2](key#1#0: u64)
	7: MoveLoc[1](e#0#0: Element)
	8: Call table::add<u64, Element>(&mut Table<u64, Element>, u64, Element)
	9: Ret
}
public borrow_mut<Element: store>(t#0#0: &mut TableVec<Element>, i#0#0: u64): &mut Element {
B0:
	0: CopyLoc[0](t#0#0: &mut TableVec<Element>)
	1: FreezeRef
	2: Call length<Element>(&TableVec<Element>): u64
	3: CopyLoc[1](i#0#0: u64)
	4: Gt
	5: BrFalse(7)
B1:
	6: Branch(11)
B2:
	7: MoveLoc[0](t#0#0: &mut TableVec<Element>)
	8: Pop
	9: LdConst[0](U64: [0, 0, 0, 0, 0, 0, 0, 0])
	10: Abort
B3:
	11: MoveLoc[0](t#0#0: &mut TableVec<Element>)
	12: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Element>)
	13: MoveLoc[1](i#0#0: u64)
	14: Call table::borrow_mut<u64, Element>(&mut Table<u64, Element>, u64): &mut Element
	15: Ret
}
public pop_back<Element: store>(t#0#0: &mut TableVec<Element>): Element {
B0:
	0: CopyLoc[0](t#0#0: &mut TableVec<Element>)
	1: FreezeRef
	2: Call length<Element>(&TableVec<Element>): u64
	3: StLoc[1](length#1#0: u64)
	4: CopyLoc[1](length#1#0: u64)
	5: LdU64(0)
	6: Gt
	7: BrFalse(9)
B1:
	8: Branch(13)
B2:
	9: MoveLoc[0](t#0#0: &mut TableVec<Element>)
	10: Pop
	11: LdConst[0](U64: [0, 0, 0, 0, 0, 0, 0, 0])
	12: Abort
B3:
	13: MoveLoc[0](t#0#0: &mut TableVec<Element>)
	14: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Element>)
	15: MoveLoc[1](length#1#0: u64)
	16: LdU64(1)
	17: Sub
	18: Call table::remove<u64, Element>(&mut Table<u64, Element>, u64): Element
	19: Ret
}
public destroy_empty<Element: store>(t#0#0: TableVec<Element>) {
B0:
	0: ImmBorrowLoc[0](t#0#0: TableVec<Element>)
	1: Call length<Element>(&TableVec<Element>): u64
	2: LdU64(0)
	3: Eq
	4: BrFalse(6)
B1:
	5: Branch(8)
B2:
	6: LdConst[1](U64: [1, 0, 0, 0, 0, 0, 0, 0])
	7: Abort
B3:
	8: MoveLoc[0](t#0#0: TableVec<Element>)
	9: UnpackGeneric[0](TableVec<Element>)
	10: Call table::destroy_empty<u64, Element>(Table<u64, Element>)
	11: Ret
}
}
